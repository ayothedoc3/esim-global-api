server {
    listen 80;
    server_name _;  # Replace with your domain name when deploying
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name _;  # Replace with your domain name when deploying
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # API endpoints
    location /api/ {
        proxy_pass http://api:8000;
        proxy_redirect off;
    }
    
    # Documentation UI
    location /docs {
        proxy_pass http://api:8000/docs;
        proxy_redirect off;
    }
    
    location /redoc {
        proxy_pass http://api:8000/redoc;
        proxy_redirect off;
    }
    
    location /openapi.json {
        proxy_pass http://api:8000/openapi.json;
        proxy_redirect off;
    }
    
    # Health check endpoint
    location /api/health {
        proxy_pass http://api:8000/api/health;
        proxy_redirect off;
        
        # Allow health checks without authentication
        proxy_set_header X-API-Key "";
    }
    
    # Rate limiting for API endpoints
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    location ~ ^/api/((?!health).)*$ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://api:8000;
    }
} 